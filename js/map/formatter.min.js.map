{"version":3,"sources":["modules/paragraphs_gridstack/es6/formatter.es6"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","$","Drupal","jQuery","settings","behaviors","gridstackFieldView","attach","context","window","width","height","gridstack_field","cellHeight","verticalMargin","items","viewGridContent","find","each","$this","this","y","attr","h","elementsHeight","top","css","push","viewContentHeight","_","reduce","memo","dataGsY","parseInt","dataGsHeight","Math","max"],"mappings":"CAAY,SAASA,EAAEC,EAAEC,EAAEC,GAAG,SAASC,EAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,IAAIE,EAAE,mBAAmBC,SAASA,QAAQ,IAAIF,GAAGC,EAAE,OAAOA,EAAEF,GAAE,GAAI,GAAGI,EAAE,OAAOA,EAAEJ,GAAE,GAAI,IAAIK,EAAE,IAAIC,MAAM,uBAAuBN,EAAE,KAAK,MAAMK,EAAEE,KAAK,mBAAmBF,EAAE,IAAIG,EAAEX,EAAEG,GAAG,CAACS,QAAQ,IAAIb,EAAEI,GAAG,GAAGU,KAAKF,EAAEC,QAAQ,SAASd,GAAoB,OAAOI,EAAlBH,EAAEI,GAAG,GAAGL,IAAeA,IAAIa,EAAEA,EAAEC,QAAQd,EAAEC,EAAEC,EAAEC,GAAG,OAAOD,EAAEG,GAAGS,QAAQ,IAAI,IAAIL,EAAE,mBAAmBD,SAASA,QAAQH,EAAE,EAAEA,EAAEF,EAAEa,OAAOX,IAAID,EAAED,EAAEE,IAAI,OAAOD,EAA7b,CAA4c,CAACa,EAAE,CAAC,SAAST,EAAQU,EAAOJ,GACxe,aAOA,IAAWK,EAAGC,EAAHD,EAyCRE,OAzCWD,EAyCHA,OAAQA,OAAOE,SA5BxBF,EAAOG,UAAUC,mBAAqB,CACpCC,OAAQ,SAAgBC,EAASJ,GACjBH,EAAEQ,QACIC,QADpB,IAEIC,EAAST,EAAOE,SAASQ,gBAAgBC,WAAaX,EAAOE,SAASQ,gBAAgBC,WAAa,GACnGC,EAAiBZ,EAAOE,SAASQ,gBAAgBE,eAAiBZ,EAAOE,SAASQ,gBAAgBE,eAAiB,EACnHC,EAAQ,GACRC,EAAkBf,EAAE,eACZe,EAAgBC,KAAK,oBAE3BC,KAAK,WACT,IAAIC,EAAQlB,EAAEmB,MACVC,EAAIF,EAAMG,KAAK,aACfC,EAAIJ,EAAMG,KAAK,kBACfE,EAAiBD,EAAIZ,EAASG,GAAkBS,EAAI,GACpDE,EAAMJ,EAAIV,EAASG,EAAiBO,EAAI,EAEhB,QAAxBF,EAAMO,IAAI,aACZP,EAAMO,IAAI,SAAUF,GACpBL,EAAMO,IAAI,MAAOD,GACjBV,EAAMY,KAAKR,MAIf,IAlCoBJ,EAkChBa,GAlCgBb,EAkCmBA,EAjClCc,EAAEC,OAAOf,EAAO,SAAUgB,EAAM/C,GACrC,IAAIgD,EAAUC,SAAShC,EAAEjB,GAAGsC,KAAK,cAC7BY,EAAeD,SAAShC,EAAEjB,GAAGsC,KAAK,mBACtC,OAAOa,KAAKC,IAAIL,EAAMC,EAAUE,IAC/B,IA6BgDvB,EAASG,GAAkBA,GAC5EE,EAAgBU,IAAI,SAAUE,MAKlC,KAAK,GAAG,CAAC","file":"../formatter.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\n/**\n * @file\n * Provides GridStack loaders for view page.\n */\n\n(function ($, Drupal, settings) {\n  'use strict';\n\n  function _getGridHeight(items) {\n    return _.reduce(items, function (memo, n) {\n      var dataGsY = parseInt($(n).attr('data-gs-y'));\n      var dataGsHeight = parseInt($(n).attr('data-gs-height'));\n      return Math.max(memo, dataGsY + dataGsHeight);\n    }, 0);\n  }\n  /**\n   * Implements grid and backbone collections on node edit page.\n   */\n  Drupal.behaviors.gridstackFieldView = {\n    attach: function attach(context, settings) {\n      var $window = $(window);\n      var width = $window.width();\n      var height = Drupal.settings.gridstack_field.cellHeight ? Drupal.settings.gridstack_field.cellHeight : 50;\n      var verticalMargin = Drupal.settings.gridstack_field.verticalMargin ? Drupal.settings.gridstack_field.verticalMargin : 0;\n      var items = [];\n      var viewGridContent = $('.grid-stack');\n      var nodes = viewGridContent.find('.grid-stack-item');\n\n      nodes.each(function () {\n        var $this = $(this);\n        var y = $this.attr('data-gs-y');\n        var h = $this.attr('data-gs-height');\n        var elementsHeight = h * height + verticalMargin * (h - 1);\n        var top = y * height + verticalMargin * y + 2;\n\n        if ($this.css('display') != 'none') {\n          $this.css('height', elementsHeight);\n          $this.css('top', top);\n          items.push($this);\n        }\n      });\n\n      var viewContentHeight = _getGridHeight(items) * (height + verticalMargin) - verticalMargin;\n      viewGridContent.css('height', viewContentHeight);\n    }\n  };\n})(jQuery, Drupal, Drupal.settings);\n\n},{}]},{},[1]);\n"]}