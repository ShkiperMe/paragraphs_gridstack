{"version":3,"sources":["modules/gridstack_field/es6/formatter.es6"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","$","jQuery","Drupal","drupalSettings","document","ready","jsonData","each","data","viewGridContent","JSON","parse","settingsValues","Object","keys","settings","map","key","height","cellHeight","verticalMargin","items","find","$this","this","y","attr","h","elementsHeight","top","css","push","viewContentHeight","_","reduce","memo","dataGsY","parseInt","dataGsHeight","Math","max","gridSettings","text","parent"],"mappings":"CAAY,SAASA,EAAEC,EAAEC,EAAEC,GAAG,SAASC,EAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,IAAIE,EAAE,mBAAmBC,SAASA,QAAQ,IAAIF,GAAGC,EAAE,OAAOA,EAAEF,GAAE,GAAI,GAAGI,EAAE,OAAOA,EAAEJ,GAAE,GAAI,IAAIK,EAAE,IAAIC,MAAM,uBAAuBN,EAAE,KAAK,MAAMK,EAAEE,KAAK,mBAAmBF,EAAE,IAAIG,EAAEX,EAAEG,GAAG,CAACS,QAAQ,IAAIb,EAAEI,GAAG,GAAGU,KAAKF,EAAEC,QAAQ,SAASd,GAAoB,OAAOI,EAAlBH,EAAEI,GAAG,GAAGL,IAAeA,IAAIa,EAAEA,EAAEC,QAAQd,EAAEC,EAAEC,EAAEC,GAAG,OAAOD,EAAEG,GAAGS,QAAQ,IAAI,IAAIL,EAAE,mBAAmBD,SAASA,QAAQH,EAAE,EAAEA,EAAEF,EAAEa,OAAOX,IAAID,EAAED,EAAEE,IAAI,OAAOD,EAA7b,CAA4c,CAACa,EAAE,CAAC,SAAST,EAAQU,EAAOJ,GACxe,aAOA,IAAWK,EAAAA,EA8DRC,OAAQC,OAAQC,eAhDjBH,EAAEI,UAAUC,MAAM,WAChB,IAAIC,EAAWN,EAAE,gDAEbM,EAAST,QACXS,EAASC,KAAK,YAgBlB,SAAsBC,EAAMC,GAC1BD,EAAOE,KAAKC,MAAMH,GAClB,IAAII,EAAiBC,OAAOC,KAAKN,EAAKO,UAAUC,IAAI,SAAUC,GAC5D,OAAOT,EAAKO,SAASE,KAGnBC,EAASN,EAAe,GAAGO,WAAaP,EAAe,GAAGO,WAAa,GACvEC,EAAiBR,EAAe,GAAGQ,eAAiBR,EAAe,GAAGQ,eAAiB,EACvFC,EAAQ,GACAZ,EAAgBa,KAAK,oBAE3Bf,KAAK,WACT,IAAIgB,EAAQvB,EAAEwB,MACVC,EAAIF,EAAMG,KAAK,aACfC,EAAIJ,EAAMG,KAAK,kBACfE,EAAiBD,EAAIT,EAASE,GAAkBO,EAAI,GACpDE,EAAMJ,EAAIP,EAASE,EAAiBK,EAAI,EAEhB,QAAxBF,EAAMO,IAAI,aACZP,EAAMO,IAAI,SAAUF,GACpBL,EAAMO,IAAI,MAAOD,GACjBR,EAAMU,KAAKR,MAIf,IAxDsBF,EAwDlBW,GAxDkBX,EAwDiBA,EAvDhCY,EAAEC,OAAOb,EAAO,SAAUc,EAAMpD,GACrC,IAAIqD,EAAUC,SAASrC,EAAEjB,GAAG2C,KAAK,cAC7BY,EAAeD,SAASrC,EAAEjB,GAAG2C,KAAK,mBACtC,OAAOa,KAAKC,IAAIL,EAAMC,EAAUE,IAC/B,IAmD8CpB,EAASE,GAAkBA,GAC5EX,EAAgBqB,IAAI,SAAUE,GAvC1BS,CAFYzC,EAAEwB,MAAMkB,OACE1C,EAAEwB,MAAMmB,SAASrB,KAAK,qBA4ClD,KAAK,GAAG,CAAC","file":"../formatter.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\n/**\n * @file\n * Provides GridStack loaders for view page.\n */\n\n(function ($, Drupal, settings) {\n  'use strict';\n\n  function _getGridHeight(items) {\n    return _.reduce(items, function (memo, n) {\n      var dataGsY = parseInt($(n).attr('data-gs-y'));\n      var dataGsHeight = parseInt($(n).attr('data-gs-height'));\n      return Math.max(memo, dataGsY + dataGsHeight);\n    }, 0);\n  }\n\n  /**\n   * Implements grid and backbone collections on node edit page.\n   */\n  $(document).ready(function () {\n    var jsonData = $('.field--name-field-paragraphs-gridstack-json');\n\n    if (jsonData.length) {\n      jsonData.each(function () {\n        var $data = $(this).text();\n        var viewGridContent = $(this).parent().find('.grid-stack');\n        gridSettings($data, viewGridContent);\n      });\n    }\n  });\n\n  /**\n   * Set the settings to the paragraph.\n   *\n   * @param data\n   *   Information about paragraph in json.\n   * @param viewGridContent\n   *   DOM presentation of paragraph.\n   */\n  function gridSettings(data, viewGridContent) {\n    data = JSON.parse(data);\n    var settingsValues = Object.keys(data.settings).map(function (key) {\n      return data.settings[key];\n    });\n\n    var height = settingsValues[0].cellHeight ? settingsValues[0].cellHeight : 50;\n    var verticalMargin = settingsValues[0].verticalMargin ? settingsValues[0].verticalMargin : 0;\n    var items = [];\n    var nodes = viewGridContent.find('.grid-stack-item');\n\n    nodes.each(function () {\n      var $this = $(this);\n      var y = $this.attr('data-gs-y');\n      var h = $this.attr('data-gs-height');\n      var elementsHeight = h * height + verticalMargin * (h - 1);\n      var top = y * height + verticalMargin * y + 2;\n\n      if ($this.css('display') != 'none') {\n        $this.css('height', elementsHeight);\n        $this.css('top', top);\n        items.push($this);\n      }\n    });\n\n    var viewContentHeight = _getGridHeight(items) * (height + verticalMargin) - verticalMargin;\n    viewGridContent.css('height', viewContentHeight);\n  }\n})(jQuery, Drupal, drupalSettings);\n\n},{}]},{},[1]);\n"]}