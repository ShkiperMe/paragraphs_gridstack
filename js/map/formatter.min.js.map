{"version":3,"sources":["es6/formatter.es6"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","$","jQuery","Drupal","drupalSettings","document","ready","data","viewGridContent","json_field","text","closest","find","each","this","parent","JSON","parse","settingsValues","Object","keys","settings","map","key","height","cellHeight","verticalMargin","horizontalMargin","horizontal_margin","items","nodes","css","isIE","window","navigator","userAgent","indexOf","$this","y","parseInt","attr","h","positionY","toString","grid-row-start","grid-row-end","push","-ms-grid-row","-ms-grid-row-span","auto_height","viewContentHeight","_","reduce","memo","dataGsY","dataGsHeight","Math","max","_getGridHeight","grid-auto-rows","gridSettings"],"mappings":"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","file":"../formatter.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\n/**\n * @file\n * Provides GridStack loaders for view page.\n */\n\n(function ($, Drupal, settings) {\n  'use strict';\n\n  function _getGridHeight(items) {\n    return _.reduce(items, function (memo, n) {\n      var dataGsY = parseInt($(n).attr('data-gs-y'));\n      var dataGsHeight = parseInt($(n).attr('data-gs-height'));\n      return Math.max(memo, dataGsY + dataGsHeight);\n    }, 0);\n  }\n\n  /**\n   * Implements grid and backbone collections on node edit page.\n   */\n  $(document).ready(function () {\n    var data = void 0;\n    var viewGridContent = void 0;\n    var json_field = $('.field--name-field-paragraphs-gridstack-json');\n\n    if (json_field.length === 1) {\n      data = json_field.text();\n      viewGridContent = json_field.closest('#site').find('.grid-stack');\n    } else if (json_field.length > 1) {\n      json_field.each(function () {\n        data = $(this).text();\n        viewGridContent = $(this).parent().find('.grid-stack');\n      });\n    }\n\n    gridSettings(data, viewGridContent);\n  });\n\n  /**\n   * Set the settings to the paragraph.\n   *\n   * @param data\n   *   Information about paragraph in json.\n   * @param viewGridContent\n   *   DOM presentation of paragraph.\n   */\n  function gridSettings(data, viewGridContent) {\n    data = JSON.parse(data);\n    var settingsValues = Object.keys(data.settings).map(function (key) {\n      return data.settings[key];\n    });\n\n    var height = settingsValues[0].cellHeight ? settingsValues[0].cellHeight : 50;\n    var verticalMargin = settingsValues[0].verticalMargin ? settingsValues[0].verticalMargin : 0;\n    var horizontalMargin = settingsValues[0].horizontal_margin ? settingsValues[0].horizontal_margin : 0;\n    var items = [];\n    var nodes = viewGridContent.find('.grid-stack-item');\n\n    viewGridContent.css('grid-column-gap', horizontalMargin);\n    viewGridContent.css('grid-row-gap', verticalMargin);\n\n    var isIE = window.navigator.userAgent.indexOf('MSIE ') > 0 || window.navigator.userAgent.indexOf('Trident/') > 0;\n\n    nodes.each(function () {\n      var $this = $(this);\n      var y = parseInt($this.attr('data-gs-y'));\n      var h = $this.attr('data-gs-height');\n      var positionY = (y + 1).toString();\n      var elementsHeight = h * height + verticalMargin * (h - 1);\n      var top = y * height + verticalMargin * y + 2;\n\n      // if ($this.css('display') != 'none') {\n      //   $this.css('height', elementsHeight);\n      //   $this.css('top', top);\n      //   items.push($this);\n      // }\n      if ($this.css('display') != 'none') {\n        $this.css({\n          'grid-row-start': positionY,\n          'grid-row-end': 'span ' + h\n        });\n        items.push($this);\n      }\n\n      // Internet Explorer\n      if (isIE) {\n        $this.css({\n          // Position Y.\n          '-ms-grid-row': positionY,\n          // Height.\n          '-ms-grid-row-span': h,\n          'height': h * (height + verticalMargin)\n        });\n      }\n    });\n\n    if (!settingsValues[0].auto_height) {\n      var viewContentHeight = _getGridHeight(items) * (height + verticalMargin) - verticalMargin;\n      viewGridContent.css({\n        'grid-auto-rows': height,\n        'height': viewContentHeight\n      });\n    } else {\n      viewGridContent.css('grid-auto-rows', 'minmax(min-content, max-content)');\n    }\n\n    viewGridContent.css('opacity', 1);\n  }\n})(jQuery, Drupal, drupalSettings);\n\n},{}]},{},[1]);\n"]}