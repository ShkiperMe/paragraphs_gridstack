{"version":3,"sources":["modules/paragraphs_gridstack/es6/widget.es6"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","$","Drupal","jQuery","settings","behaviors","gridstackField","attach","context","gridstack","cellHeight","verticalMargin","width"],"mappings":"CAAY,SAASA,EAAEC,EAAEC,EAAEC,GAAG,SAASC,EAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,IAAIE,EAAE,mBAAmBC,SAASA,QAAQ,IAAIF,GAAGC,EAAE,OAAOA,EAAEF,GAAE,GAAI,GAAGI,EAAE,OAAOA,EAAEJ,GAAE,GAAI,IAAIK,EAAE,IAAIC,MAAM,uBAAuBN,EAAE,KAAK,MAAMK,EAAEE,KAAK,mBAAmBF,EAAE,IAAIG,EAAEX,EAAEG,GAAG,CAACS,QAAQ,IAAIb,EAAEI,GAAG,GAAGU,KAAKF,EAAEC,QAAQ,SAASd,GAAoB,OAAOI,EAAlBH,EAAEI,GAAG,GAAGL,IAAeA,IAAIa,EAAEA,EAAEC,QAAQd,EAAEC,EAAEC,EAAEC,GAAG,OAAOD,EAAEG,GAAGS,QAAQ,IAAI,IAAIL,EAAE,mBAAmBD,SAASA,QAAQH,EAAE,EAAEA,EAAEF,EAAEa,OAAOX,IAAID,EAAED,EAAEE,IAAI,OAAOD,EAA7b,CAA4c,CAACa,EAAE,CAAC,SAAST,EAAQU,EAAOJ,GACxe,aAOA,IAAWK,EAAGC,EAAHD,EA4HRE,OA5HWD,EA4HHA,OAAQA,OAAOE,SA/FxBF,EAAOG,UAAUC,eAAiB,CAChCC,OAAQ,SAAgBC,EAASJ,GAY/BH,EAAE,eAAeQ,UAAU,CACzBC,WAAY,GACZC,eAAgB,EAChBC,MAAO,QAiFb,KAAK,GAAG,CAAC","file":"../widget.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\n/**\n * @file\n * Provides GridStack loaders.\n */\n\n(function ($, Drupal, settings) {\n  'use strict';\n\n  /**\n   * Helper function.\n   *\n   * Add data to json field and send to drupal callback.\n   */\n  // function _saveParagraphPosition(jsonData) {\n  //   console.log('jsonData: ', jsonData);\n  //   const { basePath, pathPrefix } = Drupal.settings;\n  //   const href = `${basePath}${pathPrefix}grid_update`;\n  //   const post = \"grid_items=\" + JSON.stringify(jsonData);\n  //\n  //   // Send data to drupal side.\n  //   $.ajax({\n  //     url: href,\n  //     type: \"POST\",\n  //     dataType: 'json',\n  //     data: post,\n  //     success: function (data) {\n  //     }\n  //   });\n  // }\n\n  /**\n   * Implements grid and backbone collections on node edit page.\n   */\n\n  Drupal.behaviors.gridstackField = {\n    attach: function attach(context, settings) {\n      // const fieldGridstack = $('.form-item-grid');\n      // let options = {};\n      //\n      // Array.prototype.forEach.call(fieldGridstack, gridHtml => {\n      //   console.log(gridHtml);\n      //   console.log($(gridHtml).attr('fid'));\n      // });\n      //\n\n      // console.log('RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR');\n\n      $('.grid-stack').gridstack({\n        cellHeight: 80,\n        verticalMargin: 0,\n        width: 12\n      });\n\n      // if (typeof settings.gridstack_field !== 'undefined') {\n      //   options = settings.gridstack_field.settings;\n      //   // fieldGridstack.gridstack(options);\n      //   options = Object.values(options);\n      //   options.forEach(value => {\n      //     $('div[fid = ' + value.field_id + ']').gridstack(value);\n      //   });\n      //   // $('div[fid = ' + options.field_id + ']').gridstack(options);\n      // }\n      //\n      // // Fill in JSON field with parameters from grid items.\n      // const $gridContainer = $('.form-item-grid');\n      // let $gridItems = $gridContainer.find('.grid-stack-item.ui-draggable.ui-resizable');\n      // let jsonFieldData = {};\n      // // jsonFieldData[fid] = {};\n      //\n      // jsonFieldData.items = [];\n      // jsonFieldData.settings = options;\n      // // jsonFieldData.fid = fid;\n      //\n      // // Warm up cache on page load and add new items.\n      // if ($gridItems.length) {\n      //   $gridItems.each(function (key, item) {\n      //     var obj = {\n      //       x: $(item).data('gs-x'),\n      //       y: $(item).data('gs-y'),\n      //       width: $(item).data('gs-width'),\n      //       height: $(item).data('gs-height'),\n      //       delta: $(item).data('delta')\n      //     };\n      //     jsonFieldData.items.push(obj);\n      //   });\n      //   _saveParagraphPosition(jsonFieldData);\n      // }\n      //\n      // $('.field-widget-paragraphs-gridstack').once('save-item', function () {\n      //   // Add custom element with value of item height.\n      //   $gridItems.each(function (key, item) {\n      //     let height = $(item).data('gs-height');\n      //     height = 'Height: ' + (height * 50) + 'px';\n      //     $(item).find('.grid-stack-item-content').prepend('<div class=\"height-counter\">' + height + '</div>');\n      //   });\n      //\n      //   $(this).on('change', function(event, items) {\n      //     if(items != undefined) {\n      //       $(items).each(function(i) {\n      //         var obj = {\n      //           x: this.x,\n      //           y: this.y,\n      //           width: this.width,\n      //           height: this.height,\n      //           delta: this.el[0].dataset.delta\n      //         };\n      //\n      //         if ((jsonFieldData.length === 0) || (items[i].el[0].dataset.delta === jsonFieldData.length)) {\n      //           jsonFieldData.items.push(obj);\n      //         }\n      //         else {\n      //           jsonFieldData.items[this.el[0].dataset.delta].x = this.x;\n      //           jsonFieldData.items[this.el[0].dataset.delta].y = this.y;\n      //           jsonFieldData.items[this.el[0].dataset.delta].width = this.width;\n      //           jsonFieldData.items[this.el[0].dataset.delta].height = this.height;\n      //         }\n      //\n      //         // Update custom element with value of item height.\n      //         var height = this.height;\n      //         var $heightContainer = $(items[i].el[0]).find('.height-counter');\n      //         height = 'Height: ' + (height * 50) + 'px';\n      //         $heightContainer.text(height);\n      //       });\n      //       _saveParagraphPosition(jsonFieldData);\n      //     }\n      //   });\n      // });\n    }\n  };\n})(jQuery, Drupal, Drupal.settings);\n\n},{}]},{},[1]);\n"]}