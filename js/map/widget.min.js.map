{"version":3,"sources":["modules/paragraphs_gridstack/es6/widget.es6"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","_typeof","Symbol","iterator","obj","constructor","prototype","$","Drupal","settings","loaded","_saveParagraphPosition","jsonData","console","log","_drupalSettings$path","drupalSettings","path","href","baseUrl","pathPrefix","post","JSON","stringify","ajax","url","type","dataType","data","success","_gatherInfo","items","gridItems","jsonFieldData","uniqueKey","forEach","item","props","dataset","x","gsX","y","gsY","width","gsWidth","height","gsHeight","delta","push","find","text","behaviors","gridstackField","attach","context","options","gridStack","Object","values","value","field_id","gridstack","fieldGridstack","document","querySelectorAll","each","gridFields","observer","MutationObserver","mutations","mutation","target","getAttribute","itemBu","config","attributes","childList","characterData","gridHtml","observe","prependTo","onchange","jQuery"],"mappings":"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","file":"../widget.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * @file\n * Provides GridStack loaders.\n */\n\n(function ($, Drupal, settings) {\n  'use strict';\n\n  var loaded = false;\n\n  /**\n   * Helper function.\n   *\n   * Add data to json field and send to drupal callback.\n   */\n  function _saveParagraphPosition(jsonData) {\n    console.log('jsonData', jsonData);\n\n    var _drupalSettings$path = drupalSettings.path,\n        baseUrl = _drupalSettings$path.baseUrl,\n        pathPrefix = _drupalSettings$path.pathPrefix;\n\n    var href = '' + baseUrl + pathPrefix + 'grid_update';\n    var post = \"grid_items=\" + JSON.stringify(jsonData);\n\n    console.log('JSON.stringify(jsonData)', JSON.stringify(jsonData));\n\n    // Send data to drupal side.\n    $.ajax({\n      url: href,\n      type: \"POST\",\n      dataType: 'json',\n      data: post,\n      success: function success(data) {}\n    });\n  }\n\n  function _gatherInfo(obj) {\n    var items = obj.gridItems,\n        jsonFieldData = obj.jsonFieldData,\n        uniqueKey = obj.uniqueKey;\n\n\n    console.log('items', items);\n    console.log('jsonFieldData', jsonFieldData);\n    console.log('uniqueKey', uniqueKey);\n    console.log(typeof items === 'undefined' ? 'undefined' : _typeof(items));\n    items.forEach(function (item) {\n      var props = item.dataset;\n      var obj = {\n        x: props.gsX,\n        y: props.gsY,\n        width: props.gsWidth,\n        height: props.gsHeight,\n        delta: props.delta\n      };\n\n      if (jsonFieldData.length === 0 || props.delta === jsonFieldData.length) {\n        jsonFieldData.items[uniqueKey].push(obj);\n      } else {\n        jsonFieldData.items[uniqueKey][props.delta] = {}; //@TODO ?????\n\n        jsonFieldData.items[uniqueKey][props.delta].x = props.gsX;\n        jsonFieldData.items[uniqueKey][props.delta].y = props.gsY;\n        jsonFieldData.items[uniqueKey][props.delta].width = props.gsWidth;\n        jsonFieldData.items[uniqueKey][props.delta].height = props.gsHeight;\n      }\n\n      // Update custom element with value of item height.\n      var height = props.gsHeight;\n      var $heightContainer = $(item).find('.height-counter');\n      height = 'Height: ' + height * 50 + 'px';\n      $heightContainer.text(height);\n    });\n    _saveParagraphPosition(jsonFieldData);\n  }\n\n  /**\n   * ---------------------------------------------------------------------------------------------\n   * @type {{}}\n   */\n\n  var options = {};\n\n  Drupal.behaviors.gridstackField = {\n    attach: function attach(context, settings) {\n      var options = {};\n      // Gridstack init.\n      if (typeof settings.gridStack !== 'undefined') {\n        options = settings.gridStack.settings;\n        options = Object.values(options);\n        options.forEach(function (value) {\n          $('.grid-stack[fid = ' + value.field_id + ']').gridstack(value);\n        });\n      }\n    }\n  };\n\n  var fieldGridstack = document.querySelectorAll('.grid-stack');\n\n  var jsonFieldData = {};\n  // jsonFieldData[fid] = {};\n\n  // Fill in JSON field with parameters from grid items.\n  if (fieldGridstack.length) {\n    var gridItems = fieldGridstack.querySelectorAll('.grid-stack-item.ui-draggable.ui-resizable');\n\n    // Warm up cache on page load and add new items.\n    // @TODO need rewrite loaded logic to document ready.\n    if (!loaded) {\n      if (gridItems.length) {\n        gridItems.each(function (item) {\n          var obj = {\n            x: $(item).data('gs-x'),\n            y: $(item).data('gs-y'),\n            width: $(item).data('gs-width'),\n            height: $(item).data('gs-height'),\n            delta: $(item).data('delta')\n          };\n          jsonFieldData.items.push(obj);\n        });\n        _saveParagraphPosition(jsonFieldData);\n      }\n      loaded = true;\n    }\n  }\n\n  // Create obj structure.\n  jsonFieldData.items = {};\n  jsonFieldData.settings = options;\n  // jsonFieldData.fid = fid;\n\n\n  // выбираем целевой элемент\n  var gridFields = document.querySelectorAll('.field--widget-paragraphs-gridstack-widget');\n\n  // создаём экземпляр MutationObserver\n  // Insert/remove dom elements event listener.\n  var observer = new MutationObserver(function (mutations) {\n    mutations.forEach(function (mutation) {\n      var gridItems = mutation.target.querySelectorAll('.grid-stack-item.ui-draggable.ui-resizable');\n\n      var uniqueKey = mutation.target.querySelectorAll('.form-item-grid')[0].getAttribute('fid');\n      jsonFieldData.items[uniqueKey] = {};\n\n      _gatherInfo({ gridItems: gridItems, jsonFieldData: jsonFieldData, uniqueKey: uniqueKey });\n\n      // DO SOMETHING ON INSERT/DELETE.\n      gridItems.forEach(function (itemBu) {\n        // DO SOMETHING ON INSERT/DELETE.\n      });\n    });\n  });\n\n  // конфигурация нашего observer:\n  var config = { attributes: true, childList: true, characterData: true };\n\n  // передаём в качестве аргументов целевой элемент и его конфигурацию\n  gridFields.forEach(function (gridHtml) {\n    var uniqueKey = gridHtml.querySelectorAll('.form-item-grid')[0].getAttribute('fid');\n    var gridItems = gridHtml.querySelectorAll('.grid-stack-item.ui-draggable.ui-resizable');\n    jsonFieldData.items[uniqueKey] = [];\n\n    // Observe insert/remove events.\n    observer.observe(gridHtml, config);\n\n    // Add custom element with value of item height.\n    if (gridItems.length) {\n      gridItems.forEach(function (item) {\n        console.log('ADD CUSTOM HEIGHT ITEM', item);\n        var height = $(item).data('gs-height');\n        height = 'Height: ' + height * 50 + 'px';\n        $(item).prependTo('<div class=\"height-counter\">' + height + '</div>');\n      });\n    }\n\n    // Other change events.\n    gridHtml.onchange = function (item) {\n      var gridItems = item.target.querySelectorAll('.grid-stack-item.ui-draggable.ui-resizable');\n\n      _gatherInfo({ gridItems: gridItems, jsonFieldData: jsonFieldData, uniqueKey: uniqueKey });\n\n      gridItems.forEach(function (itemBu) {\n        // DO THOMETHING ON CHANGE\n      });\n    };\n  });\n})(jQuery, Drupal, drupalSettings);\n\n},{}]},{},[1]);\n"]}