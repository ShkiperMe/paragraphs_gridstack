{"version":3,"sources":["modules/gridstack_field/es6/widget.es6"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","$","Drupal","settings","_gatherInfo","obj","jsonData","_drupalSettings$path","href","post","items","gridItems","jsonFieldData","uniqueKey","forEach","item","props","dataset","x","gsX","y","gsY","width","gsWidth","height","gsHeight","delta","push","find","text","gridStack","drupalSettings","path","baseUrl","pathPrefix","JSON","stringify","ajax","url","type","dataType","data","success","val","behaviors","gridstackField","attach","context","options","Object","values","value","$grid","field_id","gridstack","hasClass","addClass","hide","show","trigger","document","querySelectorAll","gridHtml","prepend","ready","parse","settingsKeys","keys","v","gridFields","observer","MutationObserver","mutations","mutation","target","querySelector","getAttribute","config","attributes","childList","characterData","subtree","observe","onchange","is","jQuery"],"mappings":"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","file":"../widget.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\n/**\n * @file\n * Provides GridStack loaders.\n */\n\n(function ($, Drupal, settings) {\n  'use strict';\n\n  /**\n   * Helper function.\n   *\n   * Add data to json field and send to drupal callback.\n   */\n  /**\n   * Helper function.\n   *\n   * Add data to json field and send to drupal callback.\n   *\n   * @param array jsonData\n   *   Information about grid in json format.\n   * @private\n   */\n\n  function _saveParagraphPosition(jsonData) {\n    var _drupalSettings$path = drupalSettings.path,\n        baseUrl = _drupalSettings$path.baseUrl,\n        pathPrefix = _drupalSettings$path.pathPrefix;\n\n    var href = \"\" + baseUrl + pathPrefix + \"grid_update\";\n    var post = \"grid_items=\" + JSON.stringify(jsonData);\n\n    // Send data to drupal side.\n    $.ajax({\n      url: href,\n      type: \"POST\",\n      dataType: 'json',\n      data: post,\n      success: function success(data) {}\n    });\n    $('#edit-field-paragraphs-gridstack-json-wrapper textarea').val(JSON.stringify(jsonData));\n  }\n\n  function _gatherInfo(obj) {\n    var items = obj.gridItems,\n        jsonFieldData = obj.jsonFieldData,\n        uniqueKey = obj.uniqueKey;\n\n    items.forEach(function (item) {\n      var props = item.dataset;\n      var obj = {\n        x: props.gsX,\n        y: props.gsY,\n        width: props.gsWidth,\n        height: props.gsHeight,\n        delta: props.delta\n      };\n\n      if (jsonFieldData.length === 0 || props.delta === jsonFieldData.length) {\n        jsonFieldData.items[uniqueKey].push(obj);\n      } else {\n        jsonFieldData.items[uniqueKey][props.delta] = {}; //@TODO ?????\n\n        jsonFieldData.items[uniqueKey][props.delta].x = props.gsX;\n        jsonFieldData.items[uniqueKey][props.delta].y = props.gsY;\n        jsonFieldData.items[uniqueKey][props.delta].width = props.gsWidth;\n        jsonFieldData.items[uniqueKey][props.delta].height = props.gsHeight;\n      }\n\n      // Update custom element with value of item height.\n      var height = props.gsHeight;\n      var $heightContainer = $(item).find('.height-counter');\n      height = 'Height: ' + height * 50 + 'px';\n      $heightContainer.text(height);\n    });\n\n    jsonFieldData.settings[uniqueKey] = settings.gridStack.settings[uniqueKey];\n\n    _saveParagraphPosition(jsonFieldData);\n  }\n\n  /**\n   * ---------------------------------------------------------------------------------------------\n   * @type {{}}\n   */\n\n  var options = {};\n\n  Drupal.behaviors.gridstackField = {\n    attach: function attach(context, settings) {\n      var options = {};\n      // Gridstack init.\n      if (typeof settings.gridStack !== 'undefined') {\n        options = settings.gridStack.settings;\n        options = Object.values(options);\n        options.forEach(function (value) {\n          var $grid = $('.grid-stack[fid = ' + value.field_id + ']');\n          $grid.gridstack(value);\n          if (value.width !== 'undefined' && !$grid.hasClass('width-' + value.width)) {\n            $grid.addClass('width-' + value.width);\n          }\n        });\n      }\n\n      // @TODO need to refactor this.\n      // SHow hide grid.\n      if (!$('#grid-settings').length) {\n        $('.form-item-grid').show();\n      } else {\n        $('.form-item-grid').hide();\n      }\n\n      // Ugly fix due to issues with saving empty node.\n      if ($(context).hasClass('grid-settings-replacement')) {\n        $('.field--widget-paragraphs-gridstack-widget').trigger('change');\n      }\n\n      // Choose element\n      var gridFields = document.querySelectorAll('.field--widget-paragraphs-gridstack-widget');\n      // pass arguments\n      gridFields.forEach(function (gridHtml) {\n        var gridItems = gridHtml.querySelectorAll('.grid-stack-item');\n        // Add custom element with value of item height.\n        if (gridItems.length) {\n          gridItems.forEach(function (item) {\n            if (!$(item).find('.height-counter').length) {\n              var height = $(item).data('gs-height');\n              height = 'Height: ' + height * 50 + 'px';\n              $(item).find('.grid-stack-item-content').prepend('<div class=\"height-counter\">' + height + '</div>');\n            }\n          });\n        }\n      });\n    }\n  };\n\n  $(document).ready(function () {\n    var data = $('#edit-field-paragraphs-gridstack-json-wrapper textarea').val();\n    if (data.length) {\n      data = JSON.parse(data);\n      var settingsKeys = Object.keys(data.settings);\n      var settingsValues = Object.values(data.settings);\n\n      settingsValues.forEach(function (v, i) {\n        $('.grid-stack[fid = ' + settingsKeys[i] + ']').gridstack(v);\n      });\n\n      // Fix for avoiding problems with adding new items after failed validation.\n      if (typeof settings.gridStack == 'undefined') {\n        settings.gridStack = data;\n      }\n    }\n  });\n\n  var jsonFieldData = {};\n\n  // Create obj structure.\n  jsonFieldData.items = {};\n  jsonFieldData.settings = options;\n  // jsonFieldData.fid = fid;\n\n  // Choose element\n  var gridFields = document.querySelectorAll('.field--widget-paragraphs-gridstack-widget');\n\n  // Create instance of MutationObserver\n  // Insert/remove dom elements event listener.\n  var observer = new MutationObserver(function (mutations, observer) {\n    mutations.forEach(function (mutation) {\n\n      // No need to do any actions on appearing/disappearing ajax throbbers.\n      if (mutation.target.querySelector('.confirm-remove')) {\n        return;\n      }\n\n      if (mutation.type === 'childList') {\n        if (mutation.target.querySelectorAll('.form-item-grid').length) {\n          var gridItems = mutation.target.querySelectorAll('.grid-stack-item.ui-draggable.ui-resizable');\n\n          var uniqueKey = mutation.target.querySelectorAll('.form-item-grid')[0].getAttribute('fid');\n          jsonFieldData.items[uniqueKey] = {};\n\n          _gatherInfo({ gridItems: gridItems, jsonFieldData: jsonFieldData, uniqueKey: uniqueKey });\n        }\n      }\n    });\n  });\n\n  // configure our observer:\n  var config = { attributes: false, childList: true, characterData: false, subtree: true };\n\n  // pass arguments\n  gridFields.forEach(function (gridHtml) {\n    var uniqueKey = gridHtml.querySelectorAll('.form-item-grid')[0].getAttribute('fid');\n    var gridItems = gridHtml.querySelectorAll('.grid-stack-item');\n    jsonFieldData.items[uniqueKey] = [];\n\n    // Observe insert/remove events.\n    observer.observe(gridHtml, config);\n\n    // Other change events.\n    gridHtml.onchange = function (item) {\n      if ($(item.target).is('.form-select, .form-text, .form-file, .form-textarea, .form-jquery_colorpicker, .form-checkbox, .form-radio')) {\n        return;\n      }\n      var gridItems = item.target.querySelectorAll('.grid-stack-item.ui-draggable.ui-resizable');\n      _gatherInfo({ gridItems: gridItems, jsonFieldData: jsonFieldData, uniqueKey: uniqueKey });\n    };\n  });\n})(jQuery, Drupal, drupalSettings);\n\n},{}]},{},[1]);\n"]}